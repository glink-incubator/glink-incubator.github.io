<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Glink SQL on Glink</title>
    <link>https://glink-incubator.github.io/glink_sql/</link>
    <description>Recent content in Glink SQL on Glink</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="https://glink-incubator.github.io/glink_sql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Glink SQL Functions</title>
      <link>https://glink-incubator.github.io/glink_sql/glink_sql_functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://glink-incubator.github.io/glink_sql/glink_sql_functions/</guid>
      <description>Glink在Flink SQL框架上扩展了一系列Spatial SQL函数, 具体函数列表和定义可参考GeoMesa SparkSQL Functions.</description>
    </item>
    
    <item>
      <title>Glink SQL on Zepplin</title>
      <link>https://glink-incubator.github.io/glink_sql/glink_sql_on_zepplin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://glink-incubator.github.io/glink_sql/glink_sql_on_zepplin/</guid>
      <description>Config Glink SQL on Zepplin     Glink SQL可以借助Flink的SQL API直接在Java代码中使用, 不过借助SQL客户端可以免去创建工程和配置依赖的繁琐. 目前开源可用的Flink SQL客户端主要有Flink自带的SQL Client的和Apache Zepplin. 我们将在Zepplin上使用Glink SQL.
关于Zepplin的安装这里不再赘述, 如有问题可参考Flink on Zeppelin, 其中有详细的教程.
Config Glink SQL on Zepplin 要在Zepplin中使用Glink扩展的SQL函数需要在Flink Interpreter指定UDF Jar路径. 在flink.udf.jars配置项中增加$GLINK_HOME/lib/glink-sql-x.x.x.jar即可.</description>
    </item>
    
  </channel>
</rss>